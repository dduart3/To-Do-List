{"version":3,"sources":["webpack:///./node_modules/pubsub-js/src/pubsub.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/node module decorator","webpack:///webpack/runtime/publicPath","webpack:///./static/images/book.svg","webpack:///./node_modules/uid/dist/index.mjs","webpack:///./src/js/modules/logic-controller.js","webpack:///./src/js/modules/factories/Project.js","webpack:///./src/js/modules/factories/Todo.js","webpack:///./src/js/modules/factories/HTMLElement.js","webpack:///./src/js/modules/components/todoElement.js","webpack:///./src/js/modules/display-controller.js","webpack:///./src/js/modules/components/projectElement.js","webpack:///./src/js/modules/storage-controller.js","webpack:///./src/js/script.js"],"names":["root","factory","PubSub","messages","lastUid","callSubscriberWithDelayedExceptions","subscriber","message","data","ex","setTimeout","throwException","callSubscriberWithImmediateExceptions","deliverMessage","originalMessage","matchedMessage","immediateExceptions","s","subscribers","callSubscriber","Object","prototype","hasOwnProperty","call","hasDirectSubscribersFor","topic","String","Boolean","obj","key","hasKeys","publish","sync","deliver","position","lastIndexOf","substr","createDeliveryFunction","toString","found","messageHasSubscribers","publishSync","subscribe","func","token","subscribeAll","subscribeOnce","unsubscribe","apply","this","arguments","clearAllSubscriptions","clearSubscriptions","m","indexOf","countSubscriptions","count","getSubscriptions","list","push","value","t","isTopic","descendantTopicExists","isToken","isFunction","result","undefined","module","exports","window","__webpack_module_cache__","__webpack_require__","moduleId","id","loaded","__webpack_modules__","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","prop","nmd","paths","children","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","Error","replace","p","BUFFER","IDX","HEX","substring","uid","len","i","tmp","SIZE","Math","random","PROJECTS_UPDATED","PROJECTS_INITIALIZED","GET_ACTUAL_PROJECT","GET_CURRENT_PROJECTS","projectsList","projectListObject","name","item","projectsManager","actualProject","previousProject","currentProjects","setActualProject","projectName","getActualProject","setPreviousProject","getPreviousProject","toggleActiveProject","msg","addProject","tasksType","newProject","tasks","findTask","taskUID","find","task","UID","findTaskIndex","addTask","taskProps","title","description","dueDate","priority","ToDo","editTask","newPropValue","taskIndex","removeTask","index","splice","Project","getProject","project","addTaskToProject","storageProjects","map","foundProject","newTaskList","filter","elementType","elementClass","elementContent","elementSource","elementHref","elementId","elementName","eventListener","inputType","element","createElement","classes","split","el","classList","add","addClasses","textContent","setAttribute","addEventListener","type","function","descriptionModal","querySelector","descriptionModalContent","closeModalOnOverlayClick","target","getPriorityColorClass","priorityClass","console","error","taskContainer","HTMLElement","taskInput","style","display","taskWrapper","taskTitle","taskDescription","text","remove","taskDate","taskPriority","appendChild","set","showElement","hideElement","currentTarget","main","projectsContainer","projectTitle","projectContent","renderProject","createdProjectElement","taskDeleteButton","preventDefault","projectElement","deleteButton","updateLogic","appendProject","renderTask","toDoElement","setProjectTitle","renderProjectList","projectList","renderProjectTasks","innerHTML","addTaskButton","addTaskmodalContainer","addTaskModalButton","addTaskModalTitleField","addTaskModalDescriptionField","addTaskModalDateField","today","Date","toISOString","slice","setMinDateValue","addTaskModalPriorityField","toDoObject","taskObject","addProjectButton","addProjectModalContainer","addProjectModalButton","addProjectModalTitleField","projectObject","object","defaultProject","toggledProjectsObject","activeClass","previousProjectElement","actualProjectElement","toggle","storage","localStorage","JSON","parse","getItem","stringifiedItem","stringify","setItem","book"],"mappings":"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","file":"bundle.2dff148983290c3400b6.js","sourcesContent":["/**\n * Copyright (c) 2010,2011,2012,2013,2014 Morgan Roderick http://roderick.dk\n * License: MIT - http://mrgnrdrck.mit-license.org\n *\n * https://github.com/mroderick/PubSubJS\n */\n\n(function (root, factory){\n    'use strict';\n\n    var PubSub = {};\n    root.PubSub = PubSub;\n    factory(PubSub);\n    // CommonJS and Node.js module support\n    if (typeof exports === 'object'){\n        if (module !== undefined && module.exports) {\n            exports = module.exports = PubSub; // Node.js specific `module.exports`\n        }\n        exports.PubSub = PubSub; // CommonJS module 1.1.1 spec\n        module.exports = exports = PubSub; // CommonJS\n    }\n    // AMD support\n    /* eslint-disable no-undef */\n    else if (typeof define === 'function' && define.amd){\n        define(function() { return PubSub; });\n        /* eslint-enable no-undef */\n    }\n\n}(( typeof window === 'object' && window ) || this, function (PubSub){\n    'use strict';\n\n    var messages = {},\n        lastUid = -1,\n        ALL_SUBSCRIBING_MSG = '*';\n\n    function hasKeys(obj){\n        var key;\n\n        for (key in obj){\n            if ( Object.prototype.hasOwnProperty.call(obj, key) ){\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Returns a function that throws the passed exception, for use as argument for setTimeout\n     * @alias throwException\n     * @function\n     * @param { Object } ex An Error object\n     */\n    function throwException( ex ){\n        return function reThrowException(){\n            throw ex;\n        };\n    }\n\n    function callSubscriberWithDelayedExceptions( subscriber, message, data ){\n        try {\n            subscriber( message, data );\n        } catch( ex ){\n            setTimeout( throwException( ex ), 0);\n        }\n    }\n\n    function callSubscriberWithImmediateExceptions( subscriber, message, data ){\n        subscriber( message, data );\n    }\n\n    function deliverMessage( originalMessage, matchedMessage, data, immediateExceptions ){\n        var subscribers = messages[matchedMessage],\n            callSubscriber = immediateExceptions ? callSubscriberWithImmediateExceptions : callSubscriberWithDelayedExceptions,\n            s;\n\n        if ( !Object.prototype.hasOwnProperty.call( messages, matchedMessage ) ) {\n            return;\n        }\n\n        for (s in subscribers){\n            if ( Object.prototype.hasOwnProperty.call(subscribers, s)){\n                callSubscriber( subscribers[s], originalMessage, data );\n            }\n        }\n    }\n\n    function createDeliveryFunction( message, data, immediateExceptions ){\n        return function deliverNamespaced(){\n            var topic = String( message ),\n                position = topic.lastIndexOf( '.' );\n\n            // deliver the message as it is now\n            deliverMessage(message, message, data, immediateExceptions);\n\n            // trim the hierarchy and deliver message to each level\n            while( position !== -1 ){\n                topic = topic.substr( 0, position );\n                position = topic.lastIndexOf('.');\n                deliverMessage( message, topic, data, immediateExceptions );\n            }\n\n            deliverMessage(message, ALL_SUBSCRIBING_MSG, data, immediateExceptions);\n        };\n    }\n\n    function hasDirectSubscribersFor( message ) {\n        var topic = String( message ),\n            found = Boolean(Object.prototype.hasOwnProperty.call( messages, topic ) && hasKeys(messages[topic]));\n\n        return found;\n    }\n\n    function messageHasSubscribers( message ){\n        var topic = String( message ),\n            found = hasDirectSubscribersFor(topic) || hasDirectSubscribersFor(ALL_SUBSCRIBING_MSG),\n            position = topic.lastIndexOf( '.' );\n\n        while ( !found && position !== -1 ){\n            topic = topic.substr( 0, position );\n            position = topic.lastIndexOf( '.' );\n            found = hasDirectSubscribersFor(topic);\n        }\n\n        return found;\n    }\n\n    function publish( message, data, sync, immediateExceptions ){\n        message = (typeof message === 'symbol') ? message.toString() : message;\n\n        var deliver = createDeliveryFunction( message, data, immediateExceptions ),\n            hasSubscribers = messageHasSubscribers( message );\n\n        if ( !hasSubscribers ){\n            return false;\n        }\n\n        if ( sync === true ){\n            deliver();\n        } else {\n            setTimeout( deliver, 0 );\n        }\n        return true;\n    }\n\n    /**\n     * Publishes the message, passing the data to it's subscribers\n     * @function\n     * @alias publish\n     * @param { String } message The message to publish\n     * @param {} data The data to pass to subscribers\n     * @return { Boolean }\n     */\n    PubSub.publish = function( message, data ){\n        return publish( message, data, false, PubSub.immediateExceptions );\n    };\n\n    /**\n     * Publishes the message synchronously, passing the data to it's subscribers\n     * @function\n     * @alias publishSync\n     * @param { String } message The message to publish\n     * @param {} data The data to pass to subscribers\n     * @return { Boolean }\n     */\n    PubSub.publishSync = function( message, data ){\n        return publish( message, data, true, PubSub.immediateExceptions );\n    };\n\n    /**\n     * Subscribes the passed function to the passed message. Every returned token is unique and should be stored if you need to unsubscribe\n     * @function\n     * @alias subscribe\n     * @param { String } message The message to subscribe to\n     * @param { Function } func The function to call when a new message is published\n     * @return { String }\n     */\n    PubSub.subscribe = function( message, func ){\n        if ( typeof func !== 'function'){\n            return false;\n        }\n\n        message = (typeof message === 'symbol') ? message.toString() : message;\n\n        // message is not registered yet\n        if ( !Object.prototype.hasOwnProperty.call( messages, message ) ){\n            messages[message] = {};\n        }\n\n        // forcing token as String, to allow for future expansions without breaking usage\n        // and allow for easy use as key names for the 'messages' object\n        var token = 'uid_' + String(++lastUid);\n        messages[message][token] = func;\n\n        // return token for unsubscribing\n        return token;\n    };\n\n    PubSub.subscribeAll = function( func ){\n        return PubSub.subscribe(ALL_SUBSCRIBING_MSG, func);\n    };\n\n    /**\n     * Subscribes the passed function to the passed message once\n     * @function\n     * @alias subscribeOnce\n     * @param { String } message The message to subscribe to\n     * @param { Function } func The function to call when a new message is published\n     * @return { PubSub }\n     */\n    PubSub.subscribeOnce = function( message, func ){\n        var token = PubSub.subscribe( message, function(){\n            // before func apply, unsubscribe message\n            PubSub.unsubscribe( token );\n            func.apply( this, arguments );\n        });\n        return PubSub;\n    };\n\n    /**\n     * Clears all subscriptions\n     * @function\n     * @public\n     * @alias clearAllSubscriptions\n     */\n    PubSub.clearAllSubscriptions = function clearAllSubscriptions(){\n        messages = {};\n    };\n\n    /**\n     * Clear subscriptions by the topic\n     * @function\n     * @public\n     * @alias clearAllSubscriptions\n     * @return { int }\n     */\n    PubSub.clearSubscriptions = function clearSubscriptions(topic){\n        var m;\n        for (m in messages){\n            if (Object.prototype.hasOwnProperty.call(messages, m) && m.indexOf(topic) === 0){\n                delete messages[m];\n            }\n        }\n    };\n\n    /**\n       Count subscriptions by the topic\n     * @function\n     * @public\n     * @alias countSubscriptions\n     * @return { Array }\n    */\n    PubSub.countSubscriptions = function countSubscriptions(topic){\n        var m;\n        // eslint-disable-next-line no-unused-vars\n        var token;\n        var count = 0;\n        for (m in messages) {\n            if (Object.prototype.hasOwnProperty.call(messages, m) && m.indexOf(topic) === 0) {\n                for (token in messages[m]) {\n                    count++;\n                }\n                break;\n            }\n        }\n        return count;\n    };\n\n\n    /**\n       Gets subscriptions by the topic\n     * @function\n     * @public\n     * @alias getSubscriptions\n    */\n    PubSub.getSubscriptions = function getSubscriptions(topic){\n        var m;\n        var list = [];\n        for (m in messages){\n            if (Object.prototype.hasOwnProperty.call(messages, m) && m.indexOf(topic) === 0){\n                list.push(m);\n            }\n        }\n        return list;\n    };\n\n    /**\n     * Removes subscriptions\n     *\n     * - When passed a token, removes a specific subscription.\n     *\n\t * - When passed a function, removes all subscriptions for that function\n     *\n\t * - When passed a topic, removes all subscriptions for that topic (hierarchy)\n     * @function\n     * @public\n     * @alias subscribeOnce\n     * @param { String | Function } value A token, function or topic to unsubscribe from\n     * @example // Unsubscribing with a token\n     * var token = PubSub.subscribe('mytopic', myFunc);\n     * PubSub.unsubscribe(token);\n     * @example // Unsubscribing with a function\n     * PubSub.unsubscribe(myFunc);\n     * @example // Unsubscribing from a topic\n     * PubSub.unsubscribe('mytopic');\n     */\n    PubSub.unsubscribe = function(value){\n        var descendantTopicExists = function(topic) {\n                var m;\n                for ( m in messages ){\n                    if ( Object.prototype.hasOwnProperty.call(messages, m) && m.indexOf(topic) === 0 ){\n                        // a descendant of the topic exists:\n                        return true;\n                    }\n                }\n\n                return false;\n            },\n            isTopic    = typeof value === 'string' && ( Object.prototype.hasOwnProperty.call(messages, value) || descendantTopicExists(value) ),\n            isToken    = !isTopic && typeof value === 'string',\n            isFunction = typeof value === 'function',\n            result = false,\n            m, message, t;\n\n        if (isTopic){\n            PubSub.clearSubscriptions(value);\n            return;\n        }\n\n        for ( m in messages ){\n            if ( Object.prototype.hasOwnProperty.call( messages, m ) ){\n                message = messages[m];\n\n                if ( isToken && message[value] ){\n                    delete message[value];\n                    result = value;\n                    // tokens are unique, so we can just stop here\n                    break;\n                }\n\n                if (isFunction) {\n                    for ( t in message ){\n                        if (Object.prototype.hasOwnProperty.call(message, t) && message[t] === value){\n                            delete message[t];\n                            result = true;\n                        }\n                    }\n                }\n            }\n        }\n\n        return result;\n    };\n}));\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","export default __webpack_public_path__ + \"assets/images/aa0b3bec86773faccc9fe5ab956c75a7.svg\";","var IDX=256, HEX=[], SIZE=256, BUFFER;\nwhile (IDX--) HEX[IDX] = (IDX + 256).toString(16).substring(1);\n\nexport function uid(len) {\n\tvar i=0, tmp=(len || 11);\n\tif (!BUFFER || ((IDX + tmp) > SIZE*2)) {\n\t\tfor (BUFFER='',IDX=0; i < SIZE; i++) {\n\t\t\tBUFFER += HEX[Math.random() * 256 | 0];\n\t\t}\n\t}\n\n\treturn BUFFER.substring(IDX, IDX++ + tmp);\n}\n","import PubSub from 'pubsub-js';\nimport Project from './factories/Project.js';\nimport ToDo from '../modules/factories/Todo.js';\nimport Note from '../modules/factories/Note.js'\nimport { uid } from 'uid';\n\n\n\nconst projects = (() => {\n    \n    const STORED_PROJECTS = 'STORED_PROJECTS';\n\n    const PROJECTS_UPDATED = 'PROJECTS_UPDATED';\n\n    const PROJECTS_INITIALIZED = 'PROJECTS_INITIALIZED';\n\n    const PROJECT_ADDED = 'PROJECT_ADDED';\n    \n    const TASK_ADDED = 'TASK_ADDED';\n\n    const TASK_REMOVED = 'TASK_REMOVED';\n    \n    const PROJECT_REMOVED = \"PROJECT_REMOVED\";\n\n    const UPDATE_ACTUAL_PROJECT = \"UPDATE_ACTUAL_PROJECT\";\n\n    const GET_ACTUAL_PROJECT = \"GET_ACTUAL_PROJECT\";\n    \n    const GET_CURRENT_PROJECTS = \"GET_CURRENT_PROJECTS\"; \n\n    const GET_PROJECT_TASKS = \"GET_PROJECT_TASKS\";\n\n    const PROJECT_TASKS = \"PROJECT_TASKS\";\n\n\n    \n    const projectsList = [];\n\n    \n    const projectListObject = {\n        name: 'PROJECTS',\n        item: projectsList\n    }\n\n\n    const projectsManager = (()=>{\n\n        let actualProject, previousProject, currentProjects;\n\n        const setActualProject = (projectName) => actualProject = projectName;\n        \n        const getActualProject = () => actualProject;\n\n        const setPreviousProject = (projectName) => previousProject = projectName;\n        \n        const getPreviousProject = () => previousProject;\n\n        const toggleActiveProject = (msg, projectName) =>{\n\n            \n\n            if( getPreviousProject() && getActualProject() && getActualProject() != projectName){\n\n                setPreviousProject( getActualProject() );\n\n                setActualProject( projectName );\n\n                \n                currentProjects = {\n                    previousProject: getPreviousProject(),\n                    actualProject: getActualProject()\n                }\n\n                \n\n                PubSub.publish(GET_ACTUAL_PROJECT, projectsManager.getActualProject());\n                PubSub.publish(GET_CURRENT_PROJECTS, currentProjects);\n            }else if( !getPreviousProject() && getActualProject() && getActualProject != projectName){\n\n                setPreviousProject( getActualProject() );\n\n                setActualProject( projectName );\n\n\n\n                currentProjects = {\n                    previousProject: getPreviousProject(),\n                    actualProject: getActualProject()\n                }\n\n                PubSub.publish(GET_ACTUAL_PROJECT, projectsManager.getActualProject());\n                PubSub.publish(GET_CURRENT_PROJECTS, currentProjects);\n\n            }else if ( !getActualProject() ){\n                setActualProject( projectName );\n\n                currentProjects = {\n                    actualProject: getActualProject()\n                }\n\n\n                PubSub.publish(GET_ACTUAL_PROJECT, projectsManager.getActualProject());\n                PubSub.publish(GET_CURRENT_PROJECTS, currentProjects);\n            }\n        }\n        return {\n            setActualProject,\n            getActualProject,\n            setPreviousProject,\n            getPreviousProject,\n            toggleActiveProject\n        };\n    })();\n\n\n    const isProjectListEmpty = () =>{\n        return projectsList\n    }\n\n\n    const addProject = (msg, {name, tasksType}) => {\n\n        const newProject = Project({name, tasksType});\n        projectsList.push(newProject);\n        \n        \n        PubSub.publish(PROJECTS_UPDATED, projectListObject);\n    }\n\n\n    const getProject = (name) => {\n        return projectsList.find(project => project.name == name);\n    }\n\n    const getProjectTasks = (msg, projectName) =>{\n        const tasks = getProject(projectName).tasks;\n\n        PubSub.publish(PROJECT_TASKS, tasks)\n    }\n\n\n    const addTaskToProject = (msg, {projectName, task}) =>{\n        const project = getProject(projectName);\n        project.addTask(task);\n\n        PubSub.publish(PROJECTS_UPDATED, projectListObject);\n    }\n\n    const removeProject = (msg, projectName) =>{\n        const foundProject = getProject(projectName);\n        \n        const newTaskList = projectsList.filter(project => project !== foundProject);    \n\n        projectsList.splice(0, projectsList.length);\n\n        newTaskList.map(project => projectsList.push(project))\n\n\n    \n        PubSub.publish(PROJECTS_UPDATED, projectListObject);\n\n    }\n\n    const removeTask = (msg, {projectName, taskUID}) =>{\n        const project = getProject(projectName);\n\n        project.removeTask(taskUID);\n\n        PubSub.publish(PROJECTS_UPDATED, projectListObject);\n    }\n\n\n\n\n    const addInitialProjects = () => {\n\n        addProject(\"msg\",{name: 'Home', tasksType: \"ToDo\"});\n        addProject(\"msg\",{name: 'DummieProject', tasksType: \"ToDo\"});\n        addProject(\"msg\",{name: 'TestProject', tasksType: \"ToDo\"});\n\n        addTaskToProject(\"msg\", {\n            projectName: \"Home\",\n            task: {\n                UID: uid(),\n                title: \"eat\",\n                description: \"i need to eat to live\",\n                dueDate: \"2021-01-30\",\n                priority: \"High\"\n                }\n            });\n\n            addTaskToProject(\"msg\", {\n                projectName: \"Home\",\n                task: {\n                    UID: uid(),\n                    title: \"sleep\",\n                    description: \"i also need to sleep to live\",\n                    dueDate: \"2021-01-20\",\n                    priority: \"High\"\n                    }\n                });\n\n                addTaskToProject(\"msg\", {\n                    projectName: \"Home\",\n                    task: {\n                        UID: uid(),\n                        title: \"play halo\",\n                        description: \"i really need to rank in halo to live\",\n                        dueDate: \"2021-01-20\",\n                        priority: \"High\"\n                        }\n                    });\n\n    \n    }\n    \n\n\n    const initializeProjectsList = (msg, storageProjects) => {\n        \n        const isDataValid = () =>{\n            return (storageProjects != null);\n        }\n\n        const createProjectsFromStorage = () =>{\n            storageProjects.map(project =>{\n\n                addProject(\"msg\", {\n                    name: project.name,\n                    tasksType: project.tasksType\n                });\n\n                project.tasks.map(task =>{\n                    addTaskToProject(\"msg\", {\n                        projectName: project.name,\n                        task: task\n                    });\n                });\n            });\n        }\n\n        if ( isDataValid() ){\n\n            createProjectsFromStorage();\n\n            PubSub.publish(PROJECTS_INITIALIZED, projectsList);\n\n        } else {\n\n            addInitialProjects();\n            PubSub.publish(PROJECTS_INITIALIZED, projectsList);\n        }\n    }\n\n\n\n\n\n    \n    \n\n\n    PubSub.subscribe(STORED_PROJECTS, initializeProjectsList);\n\n    PubSub.subscribe(TASK_ADDED, addTaskToProject);\n\n    PubSub.subscribe(PROJECT_ADDED, addProject);\n\n    PubSub.subscribe(TASK_REMOVED, removeTask);\n\n    PubSub.subscribe(PROJECT_REMOVED, removeProject)\n\n    PubSub.subscribe(UPDATE_ACTUAL_PROJECT, projectsManager.toggleActiveProject);  \n    \n    PubSub.subscribe(GET_PROJECT_TASKS, getProjectTasks)\n\n\n\n})();","import ToDo from \"./Todo\";\nconst Project = ({name, tasksType}) => {\n    \n    const tasks = [];\n    \n\n    const addTask = (taskProps) => {\n        const task = ToDo(taskProps);\n        tasks.push(task);\n    }\n\n\n\n    const findTask = (taskUID) => {\n       const foundTask = tasks.find(task => task.UID === taskUID)\n\n       return foundTask;\n    }\n\n    \n    const findTaskIndex = (taskUID) => {\n        const foundIndex = tasks.indexOf(findTask(taskUID));\n\n        return foundIndex;\n    }\n\n    const editTask = (taskUID, prop, newPropValue) => {\n        const task = findTask(taskUID);\n        const taskIndex = findTaskIndex(taskUID);\n\n        task[prop] = newPropValue;\n\n        tasks[taskIndex] = task;\n    }\n\n\n    const removeTask = (taskUID) => {\n        const index = findTaskIndex(taskUID);\n        tasks.splice(index, 1);\n    }\n\n    return {\n        name,\n        tasks,\n        tasksType,\n        addTask,\n        editTask,\n        removeTask\n    }\n}\n\nexport default Project;\n","const ToDo = ({UID, title, description, dueDate, priority}) => {\n\n    \n    return {\n        UID, \n        title, \n        description, \n        dueDate, \n        priority \n    }\n}\n\n\nexport default ToDo;","const HTMLElement = ({elementType, elementClass, elementContent, elementSource, elementHref, elementId, elementName, eventListener, inputType }) =>{\n    \n   const addClasses = (element, classes) =>{\n       classes.split(',').map(el => element.classList.add(el))\n    }\n\n\n    const element = document.createElement(elementType);\n\n    if(elementClass){\n        addClasses(element, elementClass);\n    }\n    \n    if(elementContent){\n        element.textContent = elementContent;\n    }\n            \n    if(elementSource){\n        element.setAttribute('src', elementSource)\n    }\n\n    if(elementHref){\n        element.setAttribute('href', elementHref);\n    }\n\n    if(inputType){\n        element.setAttribute('type', inputType);\n    }\n\n    if(elementName){\n        element.setAttribute('name', elementName);\n    }\n\n    if(elementId){\n        element.id = elementId;\n    }\n\n\n\n    if(eventListener){\n        element.addEventListener(eventListener.type, eventListener.function);\n    }\n    \n    return element;\n}\n\nexport default HTMLElement;","import HTMLElement from \"../factories/HTMLElement\";\nimport PubSub, { publish } from \"pubsub-js\";\n\nlet actualProject;\n\nconst GET_ACTUAL_PROJECT = \"GET_ACTUAL_PROJECT\";\n\nconst TASK_REMOVED = 'TASK_REMOVED';\n\n\nconst descriptionModal = document.querySelector('#description-modal');\n\nconst descriptionModalContent = document.querySelector('.modal__content');\n\n\nconst setActualProject = (msg, project) =>{\n    actualProject = project\n}\n\n\n\nconst showModal = () => descriptionModal.classList.remove('hidden');\n\nconst hideModal = () => descriptionModal.classList.add('hidden');\n\nconst deleteElement = (element) => element.style.display = \"none\";\n\nconst setDescriptionModalText = (text) =>{\n    descriptionModalContent.textContent = text;\n}\n\n\nconst closeModalOnOverlayClick = (e) =>{\n    if(e.target == descriptionModal){\n        hideModal();\n    }\n}\n\nconst getPriorityColorClass = (priority) =>{\n    let priorityClass;\n\n    if(priority == \"Low\"){\n        priorityClass = \"low-priority\";\n    }else if(priority == \"Medium\"){\n        priorityClass = \"medium-priority\";\n    }else if(priority == \"High\"){\n        priorityClass = \"high-priority\";\n    }else{\n        console.error(\"The priority attribute it's invalid\");\n    }\n    return priorityClass;\n} \n\n\n\nconst toDoElement = ({id, title, description, dueDate, priority }) => {\n\n    \n\n    const taskContainer = HTMLElement({\n        elementType: 'div',\n        elementClass: 'task',\n        elementId: id\n    });\n\n\n    const taskInput = HTMLElement({\n        elementType: 'input',\n        inputType: 'checkbox',\n        eventListener: {\n            type: 'click',\n            function: ()=>{\n                \n                deleteElement(taskContainer);\n                PubSub.publish(TASK_REMOVED, {projectName: actualProject, taskUID: id});\n\n            }\n        }\n    });\n\n    const taskWrapper = HTMLElement({\n        elementType: 'div',\n        elementClass: 'task__wrapper'\n    });\n\n    \n    const taskTitle = HTMLElement({\n        elementType: 'p',\n        elementClass: 'task__title',\n        elementContent: title,\n    });\n\n\n    const taskDescription = HTMLElement({\n        elementType: 'p',\n        elementClass: 'task__description',\n        elementContent: \"Click to see\",\n        eventListener: {\n            type: 'click',\n            function: (e)=>{\n                setDescriptionModalText(description);\n                showModal();\n\n                descriptionModal.addEventListener('click', closeModalOnOverlayClick)\n            }\n        }\n    });\n\n    const taskDate = HTMLElement({\n        elementType: 'p',\n        elementClass: 'task__date',\n        elementContent: dueDate,\n      \n    });\n\n\n    const taskPriority = HTMLElement({\n        elementType: 'p',\n        elementClass: getPriorityColorClass(priority),\n        elementContent: priority,\n        \n    });\n\n\n    taskWrapper.appendChild(taskTitle);\n    taskWrapper.appendChild(taskDescription);\n    taskWrapper.appendChild(taskDate);\n    taskWrapper.appendChild(taskPriority);\n\n    \n\n    taskContainer.appendChild(taskInput);\n    taskContainer.appendChild(taskWrapper);\n\n    \n    return taskContainer;\n}\nPubSub.subscribe(GET_ACTUAL_PROJECT, setActualProject)\n\nexport default toDoElement;\n\n\n","import PubSub from 'pubsub-js';\nimport { uid } from 'uid';\nimport projectElement from './components/projectElement.js';\nimport toDoElement from './components/todoElement.js';\nimport HTMLElement from './factories/HTMLElement.js';\n\n\nconst displayController = (() =>{\n\n\nconst PROJECTS_INITIALIZED = 'PROJECTS_INITIALIZED';\n\nconst PROJECT_ADDED = 'PROJECT_ADDED';\n\nconst TASK_ADDED = 'TASK_ADDED';\n\nconst UPDATE_ACTUAL_PROJECT = \"UPDATE_ACTUAL_PROJECT\";\n\nconst GET_ACTUAL_PROJECT = \"GET_ACTUAL_PROJECT\";\n\nconst GET_CURRENT_PROJECTS = \"GET_CURRENT_PROJECTS\"; \n\nconst GET_PROJECT_TASKS = \"GET_PROJECT_TASKS\";\n\nconst PROJECT_TASKS = \"PROJECT_TASKS\";\n\nconst actualProject = (()=>{\n        \n    let project;\n\n    const set = (msg, projectName) => {\n        project = projectName;\n    }\n    const get = () => project;\n\n    return{\n        set,\n        get\n    }\n})();\n\n\n\nconst showElement = (element) => element.classList.remove('hidden');\n\nconst hideElement = (element) => element.classList.add('hidden');\n\nconst closeModalOnOverlayClick = (e) =>{\n    if(e.target == e.currentTarget){\n        hideElement(e.currentTarget);\n    }\n}\n\n\nconst main = (() =>{\n    \n\n    const projectsContainer = document.querySelector('.projects');\n\n    const projectTitle = document.querySelector('.project__title');\n\n    const projectContent = document.querySelector('.project__content');\n\n    const tasksHeader = document.querySelector('.project__tasks-header');\n\n\n   \n\n\n    const appendProject = (project) => {\n        projectsContainer.appendChild(project);\n    }\n\n    const setProjectTitle = (msg, title) =>{\n        projectTitle.textContent = title;\n    }\n\n    const addTaskToProject = (task) =>{\n        projectContent.appendChild(task);\n    }\n\n    const clearProjectContent = () => projectContent.innerHTML = \"\"; \n\n\n    const renderProject = ((project)=>{\n\n        const createdProjectElement = projectElement({\n            title: project.name\n        });\n\n        createdProjectElement.addEventListener('click', (e)=>{\n            e.preventDefault();\n            \n            const projectName = createdProjectElement.id;\n            const deleteButton = createdProjectElement.children[0];\n            \n            if(e.target !== deleteButton){\n                updateLogic(projectName);\n            }\n            \n        });\n\n        appendProject(createdProjectElement);\n    });\n\n\n    \n    const renderTask =((task)=>{\n        addTaskToProject(toDoElement({\n            id: task.UID,\n            title: task.title,\n            description: task.description,\n            dueDate: task.dueDate,\n            priority: task.priority\n        }));\n    });\n\n\n    const renderProjectList = (projectList) =>{\n        projectList.map(renderProject);\n    }\n\n    \n\n    const renderProjectTasks = (msg, tasks) =>{\n        clearProjectContent();\n        tasks.map(renderTask);\n    }\n\n    return{\n       \n        setProjectTitle,\n        addTaskToProject,\n        renderProject,\n        renderProjectList,\n        renderTask,\n        renderProjectTasks, \n    }\n\n})();\n\n\nconst taskModal = (() =>{\n\n    const addTaskButton = document.querySelector(\"#add-task\");\n\n    const addTaskmodalContainer = document.querySelector('#add-task-modal');\n    \n    const addTaskModalButton = document.querySelector(\"#add-task-modal-button\");\n\n\n    const addTaskModalTitleField = document.querySelector('#task-title');\n\n    const addTaskModalDescriptionField = document.querySelector('#task-description');\n\n    const addTaskModalDateField = document.querySelector('#task-date');\n\n    \n\n    const setMinDateValue = () =>{\n        const today = new Date().toISOString().slice(0, 10)\n        \n        addTaskModalDateField.setAttribute('min', today);\n    }\n\n    const clearTaskModalInputs = () =>{\n        addTaskModalTitleField.value = \"\";\n        addTaskModalDescriptionField.value = \"\";\n        addTaskModalDateField.value = \"\";\n    }\n\n    const initTaskModal = (e) =>{\n        \n        showElement(addTaskmodalContainer);\n        setMinDateValue();\n\n        \n\n        addTaskmodalContainer.addEventListener('click', closeModalOnOverlayClick)\n    }\n\n\n\n    const saveTask = () =>{\n        const addTaskModalPriorityField = document.querySelector('input[name=\"priority\"]:checked');\n\n        const toDoObject = {\n            UID: uid(),\n            title:addTaskModalTitleField.value,\n            description: addTaskModalDescriptionField.value,\n            dueDate: addTaskModalDateField.value,\n            priority: addTaskModalPriorityField.value\n        }\n\n        const taskObject = {\n            projectName: actualProject.get(),\n            task: toDoObject\n        }\n\n        \n        PubSub.publish(TASK_ADDED, taskObject);\n        main.renderTask(toDoObject);\n\n        clearTaskModalInputs();\n        hideElement(addTaskmodalContainer);\n    }\n\n\n    addTaskButton.addEventListener('click', initTaskModal);\n    \n    addTaskmodalContainer.addEventListener('click', closeModalOnOverlayClick)\n    addTaskModalButton.addEventListener('click', saveTask);\n\n   \n\n})();\n\nconst projectModal= (() =>{\n\n    const addProjectButton= document.querySelector(\"#add-project\");\n\n    const addProjectModalContainer = document.querySelector('#add-project-modal');\n\n    const addProjectModalButton = document.querySelector(\"#add-project-modal-button\");\n\n    const addProjectModalTitleField = document.querySelector('#project-title');\n\n    const clearProjectModalInputs = () =>{\n        addProjectModalTitleField.value = \"\";\n    }\n\n\n    const initProjectModal = () =>{\n        showElement(addProjectModalContainer);\n    }\n\n\n    const saveProject = () => {\n\n        const projectObject= {\n            name: addProjectModalTitleField.value,\n            tasksType: \"ToDo\"\n        } \n    \n        PubSub.publish(PROJECT_ADDED, projectObject);\n\n        main.renderProject(projectObject)\n        \n        clearProjectModalInputs();\n        hideElement(addProjectModalContainer);\n    }\n\n    addProjectButton.addEventListener('click', initProjectModal)\n\n    addProjectModalContainer.addEventListener('click', closeModalOnOverlayClick)\n    addProjectModalButton.addEventListener('click', saveProject);\n\n})();\n\n\n\nconst toggleActiveProjectElementClass = (msg, toggledProjectsObject) =>{\n\n\n    const activeClass = \"project--active\";\n\n    if(toggledProjectsObject){\n\n        if( toggledProjectsObject.previousProject && toggledProjectsObject.actualProject){\n            const previousProjectElement = document.querySelector(`#${toggledProjectsObject.previousProject}`);\n\n            const actualProjectElement = document.querySelector(`#${toggledProjectsObject.actualProject}`);\n\n\n            previousProjectElement.classList.toggle(activeClass);\n\n            actualProjectElement.classList.toggle(activeClass)\n\n        }\n\n        else if(toggledProjectsObject.actualProject){\n\n            const actualProjectElement = document.querySelector(`#${toggledProjectsObject.actualProject}`);\n    \n            actualProjectElement.classList.toggle(activeClass);\n        }\n    }\n}\n\n\nconst updateLogic = (projectName)=>{\n    \n    PubSub.publish(UPDATE_ACTUAL_PROJECT, projectName);\n    \n    PubSub.publish(GET_PROJECT_TASKS, projectName);\n}\n\n\n\n\n\n\nconst initializeProjects = (msg, object) =>{\n\n    \n    if(object.length > 0){\n        const defaultProject = object[0].name;\n\n        const projectList = object;\n\n    \n        main.renderProjectList(projectList);\n    \n        updateLogic(defaultProject);\n    }\n    \n\n}\n\n\n\n\n\nPubSub.subscribe(GET_ACTUAL_PROJECT, actualProject.set);\nPubSub.subscribe(PROJECTS_INITIALIZED, initializeProjects);\nPubSub.subscribe(GET_CURRENT_PROJECTS, toggleActiveProjectElementClass);\n\nPubSub.subscribe(GET_ACTUAL_PROJECT, main.setProjectTitle)\nPubSub.subscribe(PROJECT_TASKS, main.renderProjectTasks);\n\n\n})();\n\n","import HTMLElement from '../factories/HTMLElement.js';\n\nconst PROJECT_REMOVED = \"PROJECT_REMOVED\";\n\n\nconst deleteElement = (element) => element.style.display = \"none\";\n\n\n\nconst project = ({title}) =>{\n\n   const taskContainer = HTMLElement({\n        elementType: 'div',\n        elementClass: 'projects__task',\n        elementId: title\n    });\n\n    const taskTitle = HTMLElement({\n        elementType: \"p\",\n        elementContent: title\n    })\n\n    const taskDeleteButton = HTMLElement({\n        elementType: 'div',\n        elementClass: 'projects__delete-button',\n        elementContent: 'x',\n        eventListener: {\n            type: 'click',\n            function: (e) =>{\n                e.preventDefault();\n                \n                deleteElement(taskContainer);\n                PubSub.publish(PROJECT_REMOVED, title);\n\n            }\n        }\n    });\n\n    taskContainer.appendChild(taskDeleteButton);\n    taskContainer.appendChild(taskTitle);\n\n    return taskContainer\n\n}\n\nexport default project;","import PubSub from 'pubsub-js';\n\n\nconst storageController = ( () =>{\n\n    const PROJECTS_UPDATED = 'PROJECTS_UPDATED';\n\n    const STORED_PROJECTS = 'STORED_PROJECTS';\n    \n    const storage = window.localStorage;\n    \n\n\n    const getItem = ( name ) => {\n        return JSON.parse ( storage.getItem ( name ) )\n    }  \n\n        \n    const setItem = ( msg, object ) => {\n\n        const {name, item} = object;\n\n        const stringifiedItem = JSON.stringify( item );\n\n        storage.setItem( name, stringifiedItem);\n    }\n\n    \n    PubSub.publish(STORED_PROJECTS, getItem('PROJECTS'));\n    \n    PubSub.subscribe(PROJECTS_UPDATED, setItem);\n\n\n})();\n\n","import '../css/reset.css'\nimport '../css/style.css';\n\nimport book from '../../static/images/book.svg'\n\nimport './modules/logic-controller.js';\nimport './modules/display-controller.js';\nimport './modules/storage-controller.js';\n\n\n\nconst img = document.querySelector('img');\n\nimg.src = book;\n\n\n\n\n\n\n\n\n"],"sourceRoot":""}